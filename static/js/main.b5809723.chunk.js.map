{"version":3,"sources":["presentation/components/Dropdown/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dropdown","title","options","onSelect","React","useState","isOpen","setIsOpen","className","type","onClick","o","role","map","option","handleSelection","App","selectedWeapon","setSelectedWeapon","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4KA4CeA,EArCE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAAe,EACtBC,IAAMC,UAAS,GADO,mBAC3CC,EAD2C,KACnCC,EADmC,KASlD,OACC,sBAAKC,UAAU,aAAf,UACC,wBAAQC,KAAK,SAASC,QAAS,kBAAMH,GAAU,SAACI,GAAD,OAAQA,MAAvD,SACEV,IAEDK,GACA,oBAAIM,KAAK,OAAT,SACEV,EAAQW,KAAI,SAACC,GAAD,OACZ,oBAECF,KAAK,WACLF,QAAS,kBAjBS,SAACI,GAExBX,EAASW,GACTP,GAAU,GAcUQ,CAAgBD,IAHhC,SAKEA,GAJIA,YCJGE,MAlBf,WAAgB,IAAD,EAC8BX,mBAAS,MADvC,mBACPY,EADO,KACSC,EADT,KAGd,OACC,sBAAKV,UAAU,MAAf,UACC,8BACES,GAAkB,uDAA0BA,OAE9C,cAAC,EAAD,CACChB,MAAM,qBACNC,QAAS,CAAC,QAAS,SAAU,SAAU,QAAS,uBAEhDC,SAAU,SAACgB,GAAD,OAAOD,EAAkBC,UCHxBC,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFXQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.b5809723.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n/* \n\t1. Dropdown começa fechado\n\t2. Quero que o dd mostre opções\n\t3. Quando selecionar um item, fechar e indicar o selecionado\n*/\nconst Dropdown = ({ title, options, onSelect }) => {\n\tconst [isOpen, setIsOpen] = React.useState(false);\n\n\tconst handleSelection = (option) => {\n\t\t// eslint-disable-next-line no-console\n\t\tonSelect(option);\n\t\tsetIsOpen(false);\n\t};\n\n\treturn (\n\t\t<div className=\"c-dropdown\">\n\t\t\t<button type=\"button\" onClick={() => setIsOpen((o) => !o)}>\n\t\t\t\t{title}\n\t\t\t</button>\n\t\t\t{isOpen && (\n\t\t\t\t<ul role=\"menu\">\n\t\t\t\t\t{options.map((option) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={option}\n\t\t\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\t\t\tonClick={() => handleSelection(option)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nDropdown.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n\toptions: PropTypes.node.isRequired,\n\tonSelect: PropTypes.func.isRequired,\n};\n\nexport default Dropdown;\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"./presentation/components\";\n\nfunction App() {\n\tconst [selectedWeapon, setSelectedWeapon] = useState(null);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div>\n\t\t\t\t{selectedWeapon && <div>Vem pro pau com sua {selectedWeapon}</div>}\n\t\t\t</div>\n\t\t\t<Dropdown\n\t\t\t\ttitle=\"Choose your weapon\"\n\t\t\t\toptions={[\"Sword\", \"Shield\", \"Katana\", \"Spear\", \"mãe aquela gorda\"]}\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tonSelect={(e) => setSelectedWeapon(e)}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}